import React from "react";
import "@style/Apropos.css";
import { Container, Row, Col, Card } from "react-bootstrap";
import 'bootstrap/dist/css/bootstrap.min.css';

const Apropos = () => {
  return (
    <Container className="apropos-container">
      {/* Titre Principal */}
      <h1 className="apropos-title text-center">Welcome to DOMOTEEK</h1>
      <p className="text-center apropos-subtitle">
        D√©couvrez l'univers du projet de synth√®se de troisi√®me ann√©e de bachelor : embarqu√©, serveur, protocoles, trames, team building....
      </p>

      {/* Section Manuel d'utilisation */}
      <Row className="justify-content-center">
        <Col md={10}>
          <Card className="apropos-card">
            <Card.Body>
              <h2 className="apropos-heading">üìñ Manuel d'Utilisation</h2>
              <p>
                Retrouvez toutes les informations essentielles pour l'installation et l'utilisation du projet
                dans notre wiki accessible depuis votre Moodle : <br /> 
                <a href="https://172.24.7.8/b3/synthese/embarque/-/wikis/home" className="apropos-link" target="_blank" rel="noopener noreferrer">
                  Manuel d'utilisation.
                </a>
              </p>
              {/* Ajout d'une image */}
              <img src="../src/assets/imgconnectee2.jpg" alt="Manuel d'Utilisation" className="d-block mx-auto" style={{ width: "80%", height: "auto" }} />
            </Card.Body>
          </Card>
        </Col>
      </Row>

      {/* Section Objets connect√©s */}
      <Row className="mt-4">
        <Col md={6}>
          <Card className="apropos-card">
            <Card.Body>
              <h2 className="apropos-heading">üõ†Ô∏è Liste des objets</h2>
              <ul>
                <li>Ampoule 12V</li>
                <li>Base Station</li>
                <li>Button</li>
                <li>Fall sensor</li>
                <li>Weather station Extern</li>
                <li>Ventilator</li>
              </ul>
              {/* Ajout d'une image */}
              <img src="../src/assets/maisonconnectee.jpg" alt="Objets connect√©s" className="d-block mx-auto" style={{ width: "100%", height: "auto" }} />
            </Card.Body>
          </Card>
        </Col>

        <Col md={6}>
          <Card className="apropos-card">
            <Card.Body>
              <h2 className="apropos-heading">üì° Protocoles</h2>
              <p>
                D√©couvrez la liste des protocoles propri√©taires utilis√©s dans le projet, incluant :
              </p>
              <ul>
                <li><strong>SMMP</strong> : Un protocole de communication s√©rie l√©ger et efficace pour l'√©change d'informations entre la base et les objets connect√©s.</li>
                <li><strong>PIS</strong> : Un protocole qui d√©finit un format commun pour l'√©change de donn√©es entre les services du serveur, bas√© sur le format JSON et con√ßu pour √™tre g√©n√©rique afin de r√©pondre √† la majorit√© des cas d'utilisation.</li>
              </ul>
              {/* Ajout d'une image */}
              <img src="../src/assets/domotique.jpg" alt="Protocoles" className="d-block mx-auto" style={{ width: "80%", height: "auto" }} />
            </Card.Body>
          </Card>
        </Col>
      </Row>

      {/* Section Partie du projet */}
      <Row className="mt-4">
        <Col md={6}>
          <Card className="apropos-card">
            <Card.Body>
              <h2 className="apropos-heading">üåê Server Side</h2>
              <p>
                Tout ce qui touche au d√©veloppement backend, aux services h√©berg√©s sur le serveur et √† leur configuration. Ici, on g√®re le c√¥t√© logiciel, les outils et services qui permettent de faire fonctionner l'application en production. 
              </p>
              {/* Ajout d'une image */}
              <img src="path/to/your/image4.jpg" alt="Server Side" className="d-block mx-auto" style={{ width: "80%", height: "auto" }} />
            </Card.Body>
          </Card>
        </Col>

        <Col md={6}>
          <Card className="apropos-card">
            <Card.Body>
              <h2 className="apropos-heading">üìü Embarqu√©</h2>
              <p>
                Tout ce qui concerne la partie embarqu√©e du projet :
              </p>
              <ul>
                <li>üîß <strong>SMMP :</strong> Le protocole SMMP est utilis√© pour la communication entre la base station et les objets connect√©s.</li>
                <li>üñ•Ô∏è <strong>Software :</strong> D√©tails des √©l√©ments software communs √† tous les objets sont disponibles.</li>
                <li>üì° <strong>Base Station :</strong> Routeur du r√©seau charg√© de la communication entre les objets (en SMMP) et le serveur (en PIS). Elle s'occupe √©galement de l'appairage des objets.</li>
                <li>üîß <strong>Objects :</strong> D√©signe l'ensemble des objets embarqu√©s, r√©partis en deux cat√©gories : Actionneurs et Capteurs.</li>
                <li>üî© <strong>Actionneurs :</strong> Objets qui agissent sur l'environnement √† la commande d'une automation ou d'un utilisateur.</li>
                <li>üìä <strong>Capteurs :</strong> Objets qui mesurent l'environnement et envoient les donn√©es √† la base station.</li>
              </ul>
              {/* Ajout d'une image */}
              <img src="path/to/your/image5.jpg" alt="Embarqu√©" className="d-block mx-auto" style={{ width: "80%", height: "auto" }} />
            </Card.Body>
          </Card>
        </Col>
      </Row>

      {/* Section CI/CD */}
      <Row className="mt-4">
        <Col md={12}>
          <Card className="apropos-card">
            <Card.Body>
              <h2 className="apropos-heading">üöÄ Int√©gration et D√©ploiement (CI/CD)</h2>
              <p>
                D√©couvrez comment le projet utilise un pipeline CI/CD performant pour automatiser les d√©ploiements et garantir une mise en production efficace.
              </p>
              <p>
                Le **CDCI** automatise la compilation, les tests et le d√©ploiement des applications, permettant la cr√©ation d'ex√©cutables Windows et Linux √† chaque cr√©ation de tag. Voici les √©tapes cl√©s :
              </p>
              <ul>
                <li><strong>Commiter</strong> le code sur la branche <code>dev</code> et cr√©er un nouveau tag : <code>git tag -a v1.4 -m "Description"</code></li>
                <li><strong>Jobs</strong> : Le pipeline se compose de 3 jobs principaux :
                  <ul>
                    <li><strong>build_front</strong> : Construction de l'application front-end.</li>
                    <li><strong>generate_linux</strong> & <strong>generate_windows</strong> : G√©n√©ration des ex√©cutables en parall√®le pour chaque plateforme.</li>
                    <li><strong>release_job</strong> : Cr√©ation d'une release avec les ex√©cutables g√©n√©r√©s.</li>
                  </ul>
                </li>
                <li><strong>Automatisation</strong> : Chaque nouveau tag d√©clenche automatiquement le pipeline, cr√©ant une release avec les ex√©cutables pr√™ts √† √™tre t√©l√©charg√©s.</li>
              </ul>
              {/* Ajout d'une image */}
              <img src="path/to/your/image6.jpg" alt="CI/CD" className="d-block mx-auto" style={{ width: "80%", height: "auto" }} />
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </Container>
  );
};

export default Apropos;
